{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Components/CommonItemForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CircularProgress, CssBaseline, Grid, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './style';\nimport { textFormValidator, numberValidator } from '../../FormValidators/FormValidator';\n\nfunction Index({\n  handleFunction,\n  register,\n  formData,\n  loading,\n  collectionName,\n  id\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.heading,\n        color: \"primary\",\n        component: \"h1\",\n        variant: \"h5\",\n        children: [\"Add New \", collectionName.slice(0, -1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleFunction,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [formData.map(detail => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                type: detail.name === \"price\" ? \"number\" : \"text\",\n                label: `Enter product ${detail.name}*`,\n                name: detail,\n                autoComplete: \"off\",\n                inputRef: register(detail.name === \"price\" ? numberValidator() : textFormValidator()),\n                error: detail.error,\n                helperText: detail.helperText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 36\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h5\",\n              variant: \"h6\",\n              children: \"select image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"image/*\",\n              className: classes.input,\n              multiple: true,\n              type: \"file\",\n              name: \"image\",\n              required: true,\n              ref: register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          className: classes.submit,\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\",\n            size: \"22px\",\n            className: classes.loading,\n            style: loading ? {\n              display: \"block\"\n            } : {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 16\n          }, this), \"save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Index, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Components/CommonItemForm/index.js"],"names":["Button","CircularProgress","CssBaseline","Grid","TextField","Typography","React","useStyles","textFormValidator","numberValidator","Index","handleFunction","register","formData","loading","collectionName","id","classes","padding","paper","heading","slice","form","map","detail","name","error","helperText","input","submit","display"],"mappings":"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","sourcesContent":["import { Button, CircularProgress, CssBaseline, Grid, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport useStyles from './style'\nimport {textFormValidator,numberValidator} from '../../FormValidators/FormValidator'\nfunction Index({\n    handleFunction,\n    register,\n    formData,\n    loading,\n    collectionName,\n    id\n}) {\n    \n    const classes = useStyles()\n    return (\n        <Grid style={{padding:\"20px\"}}>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography className={classes.heading} color=\"primary\" component=\"h1\" variant=\"h5\">\n            Add New {collectionName.slice(0,-1)}\n          </Typography>\n          <form className={classes.form} onSubmit={handleFunction}>\n            <Grid container spacing={2}>\n                        {formData.map((detail) => {\n                            return <Grid item xs={12} >\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    type={detail.name === \"price\" ?\"number\":\"text\"}\n                                    label={`Enter product ${detail.name}*`}\n                                    name={detail}\n                                    autoComplete=\"off\"\n                                    inputRef={register(detail.name === \"price\"?numberValidator():textFormValidator())}\n                                    error={detail.error}\n                                    helperText={detail.helperText}\n                                />\n                                \n                            </Grid>\n                        })}\n                        <Grid item xs={12} >\n                        <Typography component=\"h5\" variant=\"h6\">select image</Typography>\n                                <input\n                                    accept=\"image/*\"\n                                    className={classes.input}\n                                    multiple\n                                    type=\"file\"\n                                    name=\"image\"\n                                    required\n                                    ref={register}\n                            />\n                            </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              className={classes.submit}\n            >\n               <CircularProgress color=\"primary\" size=\"22px\" className={classes.loading}  style={loading?{display:\"block\"}:{display:\"none\"}}/>\n              save\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    )\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}