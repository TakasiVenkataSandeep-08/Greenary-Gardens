{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Plants/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport MatchCard from '../../Components/MatchCard';\nimport Loader from '../../Components/Loader';\nimport useStyles from './style';\nexport default function Index({\n  loggedinUser,\n  externalData,\n  location,\n  ...rest\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [plants, setPlants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [snackBar, setSnackBar] = React.useState({\n    value: false,\n    message: '',\n    type: ''\n  });\n  useEffect(() => {\n    var mounted = true;\n\n    async function getPlants() {\n      console.log(\"hello\");\n    }\n\n    if (mounted) {\n      getPlants();\n    }\n\n    return () => {\n      mounted = false;\n    };\n  });\n\n  if (!loading) {\n    const filteredData = externalData ? externalData : plants;\n\n    if (filteredData.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: filteredData.map(match => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              sm: 6,\n              lg: 4,\n              spacing: 5,\n              className: classes.wrapper,\n              children: /*#__PURE__*/_jsxDEV(MatchCard, {\n                matchData: match,\n                loggedinUser: loggedinUser,\n                history: rest.history\n              }, match.matchId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        color: \"secondary\",\n        variant: \"h4\",\n        align: \"center\",\n        children: \"No Plants Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Index, \"o24tHzksSYrOLAQGO0H4WRvyJrs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Plants/index.js"],"names":["React","useState","useEffect","Grid","Typography","MatchCard","Loader","useStyles","Index","loggedinUser","externalData","location","rest","classes","plants","setPlants","loading","setLoading","snackBar","setSnackBar","value","message","type","mounted","getPlants","console","log","filteredData","length","root","map","match","wrapper","history","matchId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AAKA,eAAe,SAASC,KAAT,CAAe;AAC1BC,EAAAA,YAD0B;AAE1BC,EAAAA,YAF0B;AAG1BC,EAAAA,QAH0B;AAI1B,KAAGC;AAJuB,CAAf,EAKb;AAAA;;AACE,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BnB,KAAK,CAACC,QAAN,CAAe;AAC3CmB,IAAAA,KAAK,EAAE,KADoC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,IAAI,EAAE;AAHqC,GAAf,CAAhC;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,OAAO,GAAG,IAAd;;AACA,mBAAeC,SAAf,GAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AACD,QAAIH,OAAJ,EAAa;AACTC,MAAAA,SAAS;AACZ;;AACD,WAAO,MAAM;AAAED,MAAAA,OAAO,GAAG,KAAV;AAAiB,KAAhC;AACH,GATQ,CAAT;;AAaA,MAAI,CAACP,OAAL,EAAc;AACV,UAAMW,YAAY,GAAGjB,YAAY,GAAGA,YAAH,GAAkBI,MAAnD;;AACA,QAAIa,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,0BACI;AAAK,QAAA,SAAS,EAAEf,OAAO,CAACgB,IAAxB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,oBACKF,YAAY,CAACG,GAAb,CAAkBC,KAAD,IAAW;AACzB,gCACI,QAAC,IAAD;AACI,cAAA,SAAS,MADb;AAEI,cAAA,IAAI,MAFR;AAGI,cAAA,EAAE,EAAE,EAHR;AAII,cAAA,EAAE,EAAE,CAJR;AAKI,cAAA,EAAE,EAAE,CALR;AAMI,cAAA,OAAO,EAAE,CANb;AAOI,cAAA,SAAS,EAAElB,OAAO,CAACmB,OAPvB;AAAA,qCASI,QAAC,SAAD;AAEI,gBAAA,SAAS,EAAED,KAFf;AAGI,gBAAA,YAAY,EAAEtB,YAHlB;AAII,gBAAA,OAAO,EAAEG,IAAI,CAACqB;AAJlB,iBACSF,KAAK,CAACG,OADf;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,oBADJ;AAkBH,WAnBA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AA0BH,KA3BD,MA2BO;AACH,0BACI,QAAC,UAAD;AACI,QAAA,SAAS,EAAC,IADd;AAEI,QAAA,KAAK,EAAC,WAFV;AAGI,QAAA,OAAO,EAAC,IAHZ;AAII,QAAA,KAAK,EAAC,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACJ,GAzCD,MAyCO;AACH,wBACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;;GA5EuB1B,K;UAMJD,S;;;KANIC,K","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Grid, Typography } from '@material-ui/core'\nimport MatchCard from '../../Components/MatchCard'\nimport Loader from '../../Components/Loader'\nimport useStyles from './style'\n\n\n\n\nexport default function Index({\n    loggedinUser,\n    externalData,\n    location,\n    ...rest\n}){\n    const classes = useStyles()\n    const [plants, setPlants] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [snackBar, setSnackBar] = React.useState({\n        value: false,\n        message: '',\n        type: '',\n    })\n    \n    useEffect(() => {\n        var mounted = true\n        async function getPlants() {\n            console.log(\"hello\")\n        }\n        if (mounted) {\n            getPlants()\n        }\n        return () => { mounted = false }\n    })\n\n\n \n    if (!loading) {\n        const filteredData = externalData ? externalData : plants\n        if (filteredData.length !== 0) {\n            return (\n                <div className={classes.root}>\n                    <Grid container spacing={2}>\n                        {filteredData.map((match) => {\n                            return (\n                                <Grid\n                                    container\n                                    item\n                                    xs={12}\n                                    sm={6}\n                                    lg={4}\n                                    spacing={5}\n                                    className={classes.wrapper}\n                                >\n                                    <MatchCard\n                                        key={match.matchId}\n                                        matchData={match}\n                                        loggedinUser={loggedinUser}\n                                        history={rest.history}\n                                    />\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>\n            )\n        } else {\n            return (\n                <Typography\n                    component='h1'\n                    color='secondary'\n                    variant='h4'\n                    align='center'\n                >\n                    No Plants Found\n                </Typography>\n            )\n        }\n    } else {\n        return (\n            <Typography align='center'>\n                <Loader />\n            </Typography>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}