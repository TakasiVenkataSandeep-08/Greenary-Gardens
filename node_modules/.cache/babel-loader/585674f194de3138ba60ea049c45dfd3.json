{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Components/MatchCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport getAvatar from '../../utils/createAvatar';\nimport clsx from 'clsx';\nimport { Chip } from '@material-ui/core';\nimport Snackbar from '../SnackBar';\nimport Badge from '@material-ui/core/Badge';\nimport useStyles from './style';\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\nimport { subscribeToMatch, removeSubscription } from '../../api/subscription';\nimport { useCrickStore } from '../../store';\nimport moment from 'moment';\nexport default function MediaCard({\n  plantData,\n  loggedinUser,\n  history\n}) {\n  _s();\n\n  const [snackBar, setSnackBar] = React.useState({\n    value: false,\n    message: '',\n    type: ''\n  });\n\n  const handleCloseSnakeBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackBar({\n      value: false,\n      message: '',\n      type: ''\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.title,\n        subheader: \"cvvc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardBody,\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: classes.cardBottom,\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      isOpen: snackBar.value,\n      message: snackBar.message,\n      setIsOpen: setSnackBar,\n      type: snackBar.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MediaCard, \"b1kCmjYp81Vkn3zayzYhGyKlDAA=\", false, function () {\n  return [useStyles];\n});\n\n_c = MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Components/MatchCard/index.js"],"names":["React","Card","CardActionArea","CardActions","CardContent","Avatar","IconButton","Typography","ShareIcon","CardHeader","Checkbox","FormControlLabel","Grid","Link","CopyToClipboard","getAvatar","clsx","Chip","Snackbar","Badge","useStyles","Favorite","FavoriteBorder","subscribeToMatch","removeSubscription","useCrickStore","moment","MediaCard","plantData","loggedinUser","history","snackBar","setSnackBar","useState","value","message","type","handleCloseSnakeBar","event","reason","classes","root","title","cardBody","cardBottom"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,IAArC,QAAiD,mBAAjD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,oBAAzC;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,wBAArD;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA0BC,EAAAA;AAA1B,CAAnB,EAAwD;AAAA;;AAErE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhC,KAAK,CAACiC,QAAN,CAAe;AAC7CC,IAAAA,KAAK,EAAE,KADsC;AAE7CC,IAAAA,OAAO,EAAE,EAFoC;AAG7CC,IAAAA,IAAI,EAAE;AAHuC,GAAf,CAAhC;;AAKA,QAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDP,IAAAA,WAAW,CAAC;AAAEE,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE,EAAzB;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAAD,CAAX;AACD,GALD;;AAOA,QAAMI,OAAO,GAAGpB,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEoB,OAAO,CAACC,IAAzB;AAAA,4BACI,QAAC,cAAD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,SAAS,EAAED,OAAO,CAACE,KADrB;AAEE,QAAA,SAAS,EACL;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEF,OAAO,CAACG,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYE,QAAC,WAAD;AAAa,MAAA,cAAc,MAA3B;AAA4B,MAAA,SAAS,EAAEH,OAAO,CAACI,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,QAAD;AACE,MAAA,MAAM,EAAEb,QAAQ,CAACG,KADnB;AAEE,MAAA,OAAO,EAAEH,QAAQ,CAACI,OAFpB;AAGE,MAAA,SAAS,EAAEH,WAHb;AAIE,MAAA,IAAI,EAAED,QAAQ,CAACK;AAJjB;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAvCuBT,S;UAcNP,S;;;KAdMO,S","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport ShareIcon from '@material-ui/icons/Share'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport getAvatar from '../../utils/createAvatar'\nimport clsx from 'clsx'\nimport { Chip } from '@material-ui/core'\nimport Snackbar from '../SnackBar'\nimport Badge from '@material-ui/core/Badge'\nimport useStyles from './style'\nimport { Favorite, FavoriteBorder } from '@material-ui/icons'\nimport { subscribeToMatch, removeSubscription } from '../../api/subscription'\nimport { useCrickStore } from '../../store'\nimport moment from 'moment';\n\nexport default function MediaCard({ plantData, loggedinUser,history }) {\n \n  const [snackBar, setSnackBar] = React.useState({\n    value: false,\n    message: '',\n    type: '',\n  })\n  const handleCloseSnakeBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackBar({ value: false, message: '', type: '' })\n  }\n\n  const classes = useStyles()\n  return (\n    <Card className={classes.root}>\n        <CardActionArea>\n          <CardHeader\n            className={classes.title}\n            subheader={\n                \"cvvc\"\n            }\n          />\n          <CardContent className={classes.cardBody}>\n            hello\n          </CardContent>\n        </CardActionArea>\n      <CardActions disableSpacing className={classes.cardBottom}>\n        hello\n      </CardActions>\n      <Snackbar\n        isOpen={snackBar.value}\n        message={snackBar.message}\n        setIsOpen={setSnackBar}\n        type={snackBar.type}\n      />\n    </Card>\n  )\n}"]},"metadata":{},"sourceType":"module"}