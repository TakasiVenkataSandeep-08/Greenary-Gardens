{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { passwordFormValidator, emailFormValidator, confirmPasswordValidator, textFormValidator } from '../../FormValidators/FormValidator';\nimport CommonForm from '../../Components/CommonForm';\nexport default function Signup({\n  setSnackBar,\n  history\n}) {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm({\n    mode: 'onChange'\n  });\n  const SignupFormDetails = [{\n    name: \"name\",\n    type: \"text\",\n    label: \"User Name\",\n    validator: register(textFormValidator()),\n    error: errors.name,\n    helperText: errors.name ? errors.name.message : null\n  }, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email Address\",\n    validator: register(emailFormValidator()),\n    error: errors.email,\n    helperText: errors.email ? errors.email.message : null\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    validator: register(passwordFormValidator()),\n    error: errors.password,\n    helperText: errors.password ? errors.password.message : null\n  }, {\n    name: \"confirmPassword\",\n    label: \"confirm Password\",\n    type: \"password\",\n    validator: register(confirmPasswordValidator(getValues)),\n    error: errors.confirmPassword,\n    helperText: errors.confirmPassword ? errors.confirmPassword.message : null\n  }];\n\n  const handleSignupSubmit = async data => {// setLoading(true)\n    // const userData = {\n    //   name:data.name,\n    //   email:data.email,\n    //   password:data.password,\n    // }\n    // let response = await userSignup(userData)\n    // setLoading(false)\n    // setSnackBar({ value: true, message: response.message, type: 'green' });\n    // history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(CommonForm, {\n    submitFunction: handleSubmit(handleSignupSubmit),\n    isLoading: loading,\n    submitButtonName: \"signup\",\n    formHeading: \"Signup\",\n    formDetails: SignupFormDetails\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"gQQOh12bTC1LooT22gNmu1gvH7s=\", false, function () {\n  return [useForm];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Signup/index.js"],"names":["React","useForm","passwordFormValidator","emailFormValidator","confirmPasswordValidator","textFormValidator","CommonForm","Signup","setSnackBar","history","loading","setLoading","useState","register","handleSubmit","errors","getValues","mode","SignupFormDetails","name","type","label","validator","error","helperText","message","email","password","confirmPassword","handleSignupSubmit","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,wBAHF,EAIEC,iBAJF,QAKO,oCALP;AAMA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,WAD6B;AAE7BC,EAAAA;AAF6B,CAAhB,EAGZ;AAAA;;AACD,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA7B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAAgDf,OAAO,CAAC;AAC5DgB,IAAAA,IAAI,EAAE;AADsD,GAAD,CAA7D;AAGA,QAAMC,iBAAiB,GAAC,CACtB;AACEC,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAC,MAFP;AAGEC,IAAAA,KAAK,EAAC,WAHR;AAIEC,IAAAA,SAAS,EAACT,QAAQ,CAACR,iBAAiB,EAAlB,CAJpB;AAKEkB,IAAAA,KAAK,EAACR,MAAM,CAACI,IALf;AAMEK,IAAAA,UAAU,EAACT,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACI,IAAP,CAAYM,OAA1B,GAAoC;AANjD,GADsB,EAStB;AACAN,IAAAA,IAAI,EAAC,OADL;AAEAC,IAAAA,IAAI,EAAC,OAFL;AAGAC,IAAAA,KAAK,EAAC,eAHN;AAIAC,IAAAA,SAAS,EAACT,QAAQ,CAACV,kBAAkB,EAAnB,CAJlB;AAKAoB,IAAAA,KAAK,EAACR,MAAM,CAACW,KALb;AAMAF,IAAAA,UAAU,EAACT,MAAM,CAACW,KAAP,GAAeX,MAAM,CAACW,KAAP,CAAaD,OAA5B,GAAsC;AANjD,GATsB,EAkBtB;AACAN,IAAAA,IAAI,EAAC,UADL;AAEAE,IAAAA,KAAK,EAAC,UAFN;AAGAD,IAAAA,IAAI,EAAC,UAHL;AAIAE,IAAAA,SAAS,EAACT,QAAQ,CAACX,qBAAqB,EAAtB,CAJlB;AAKAqB,IAAAA,KAAK,EAACR,MAAM,CAACY,QALb;AAMAH,IAAAA,UAAU,EAACT,MAAM,CAACY,QAAP,GAAkBZ,MAAM,CAACY,QAAP,CAAgBF,OAAlC,GAA4C;AANvD,GAlBsB,EA0BtB;AACAN,IAAAA,IAAI,EAAC,iBADL;AAEAE,IAAAA,KAAK,EAAC,kBAFN;AAGAD,IAAAA,IAAI,EAAC,UAHL;AAIAE,IAAAA,SAAS,EAACT,QAAQ,CAACT,wBAAwB,CAACY,SAAD,CAAzB,CAJlB;AAKAO,IAAAA,KAAK,EAACR,MAAM,CAACa,eALb;AAMAJ,IAAAA,UAAU,EAACT,MAAM,CAACa,eAAP,GAAyBb,MAAM,CAACa,eAAP,CAAuBH,OAAhD,GAA0D;AANrE,GA1BsB,CAAxB;;AAmCA,QAAMI,kBAAkB,GAAG,MAAOC,IAAP,IAAgB,CACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAXD;;AAYA,sBACE,QAAC,UAAD;AAAY,IAAA,cAAc,EAAEhB,YAAY,CAACe,kBAAD,CAAxC;AAA8D,IAAA,SAAS,EAAEnB,OAAzE;AAAkF,IAAA,gBAAgB,EAAE,QAApG;AAA8G,IAAA,WAAW,EAAE,QAA3H;AAAqI,IAAA,WAAW,EAAEQ;AAAlJ;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GA1DuBX,M;UAKgCN,O;;;KALhCM,M","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport {\n  passwordFormValidator,\n  emailFormValidator,\n  confirmPasswordValidator,\n  textFormValidator\n} from '../../FormValidators/FormValidator'\nimport CommonForm from '../../Components/CommonForm'\n\nexport default function Signup({\n  setSnackBar,\n  history\n}) {\n  const [loading,setLoading] = React.useState(false)\n  const { register, handleSubmit, errors, getValues } = useForm({\n    mode: 'onChange'\n  })\n  const SignupFormDetails=[\n    {\n      name: \"name\",\n      type:\"text\",\n      label:\"User Name\",\n      validator:register(textFormValidator()),\n      error:errors.name,\n      helperText:errors.name ? errors.name.message : null\n    },\n    {\n    name:\"email\",\n    type:\"email\",\n    label:\"Email Address\",\n    validator:register(emailFormValidator()),\n    error:errors.email,\n    helperText:errors.email ? errors.email.message : null\n    },\n  \n    {\n    name:\"password\",\n    label:\"Password\",\n    type:\"password\",\n    validator:register(passwordFormValidator()),\n    error:errors.password,\n    helperText:errors.password ? errors.password.message : null\n    },\n    {\n    name:\"confirmPassword\",\n    label:\"confirm Password\",\n    type:\"password\",\n    validator:register(confirmPasswordValidator(getValues)),\n    error:errors.confirmPassword,\n    helperText:errors.confirmPassword ? errors.confirmPassword.message : null\n    }\n  ]\n  const handleSignupSubmit = async (data) => {\n    // setLoading(true)\n    // const userData = {\n    //   name:data.name,\n    //   email:data.email,\n    //   password:data.password,\n    // }\n    // let response = await userSignup(userData)\n    // setLoading(false)\n    // setSnackBar({ value: true, message: response.message, type: 'green' });\n    // history.push(\"/login\");\n  }\n  return (\n    <CommonForm submitFunction={handleSubmit(handleSignupSubmit)} isLoading={loading} submitButtonName={\"signup\"} formHeading={\"Signup\"} formDetails={SignupFormDetails} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}