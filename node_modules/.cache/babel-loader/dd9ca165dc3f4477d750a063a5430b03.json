{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Plants/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport MatchCard from '../../Components/MatchCard';\nimport Loader from '../../Components/Loader';\nimport useStyles from './style';\nimport { getAllDocuments, getSingleDocument } from '../../services/firebase';\nexport default function Index({\n  loggedinUser,\n  externalData,\n  collectionName = 'plants',\n  ...rest\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [filteredData, setFilteredData] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [snackBar, setSnackBar] = React.useState({\n    value: false,\n    message: '',\n    type: ''\n  });\n  useEffect(() => {\n    var mounted = true;\n\n    async function getPlants() {\n      setLoading(true);\n\n      if (Object.keys(loggedinUser).length !== 0) {\n        const isAdminResponse = await getSingleDocument('users', loggedinUser.userId);\n\n        if (isAdminResponse.isAdmin) {\n          setIsAdmin(true);\n        }\n      }\n\n      const response = await getAllDocuments(collectionName);\n      console.log(response);\n\n      if (mounted) {\n        setFilteredData(response);\n      }\n\n      setLoading(false);\n    }\n\n    getPlants();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!loading) {\n    if (filteredData.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"secondary\",\n          children: [\"Add \", collectionName.slice(0, -1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: filteredData.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              sm: 6,\n              lg: 3,\n              spacing: 5,\n              className: classes.wrapper,\n              children: /*#__PURE__*/_jsxDEV(MatchCard, {\n                isAdmin: isAdmin,\n                itemDetails: item,\n                loggedinUser: loggedinUser,\n                history: rest.history,\n                collectionName: collectionName\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        color: \"secondary\",\n        variant: \"h4\",\n        align: \"center\",\n        children: \"No Items To show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Index, \"nVWrclMoTl53B+/6xrCb4tReCSU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Plants/index.js"],"names":["React","useState","useEffect","Button","Grid","Typography","MatchCard","Loader","useStyles","getAllDocuments","getSingleDocument","Index","loggedinUser","externalData","collectionName","rest","classes","filteredData","setFilteredData","isAdmin","setIsAdmin","loading","setLoading","snackBar","setSnackBar","value","message","type","mounted","getPlants","Object","keys","length","isAdminResponse","userId","response","console","log","root","slice","map","item","index","wrapper","history","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,QAAyC,mBAAzC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,yBAAnD;AAEA,eAAe,SAASC,KAAT,CAAe;AAC1BC,EAAAA,YAD0B;AAE1BC,EAAAA,YAF0B;AAG1BC,EAAAA,cAAc,GAAC,QAHW;AAI1B,KAAGC;AAJuB,CAAf,EAKb;AAAA;;AACE,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BxB,KAAK,CAACC,QAAN,CAAe;AAC3CwB,IAAAA,KAAK,EAAE,KADoC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,IAAI,EAAE;AAHqC,GAAf,CAAhC;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,OAAO,GAAG,IAAd;;AACA,mBAAeC,SAAf,GAA2B;AACvBP,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIQ,MAAM,CAACC,IAAP,CAAYnB,YAAZ,EAA0BoB,MAA1B,KAAqC,CAAzC,EAA4C;AACxC,cAAMC,eAAe,GAAG,MAAMvB,iBAAiB,CAAC,OAAD,EAAUE,YAAY,CAACsB,MAAvB,CAA/C;;AACA,YAAID,eAAe,CAACd,OAApB,EAA6B;AACzBC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;;AACG,YAAMe,QAAQ,GAAG,MAAM1B,eAAe,CAACK,cAAD,CAAtC;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,UAAIP,OAAJ,EAAa;AACTV,QAAAA,eAAe,CAACiB,QAAD,CAAf;AACH;;AACDb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACP;;AAEGO,IAAAA,SAAS;AAEb,WAAO,MAAM;AAAED,MAAAA,OAAO,GAAG,KAAV;AAAiB,KAAhC;AACH,GArBQ,EAqBP,EArBO,CAAT;;AAyBA,MAAI,CAACP,OAAL,EAAc;AACV,QAAIJ,YAAY,CAACe,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,0BACI;AAAK,QAAA,SAAS,EAAEhB,OAAO,CAACsB,IAAxB;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,SAAS,MAAjB;AAAkB,UAAA,OAAO,EAAC,WAA1B;AAAsC,UAAA,KAAK,EAAC,WAA5C;AAAA,6BAA6DxB,cAAc,CAACyB,KAAf,CAAqB,CAArB,EAAuB,CAAC,CAAxB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,oBACKtB,YAAY,CAACuB,GAAb,CAAiB,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAC9B,gCACI,QAAC,IAAD;AACI,cAAA,SAAS,MADb;AAEI,cAAA,IAAI,MAFR;AAII,cAAA,EAAE,EAAE,EAJR;AAKI,cAAA,EAAE,EAAE,CALR;AAMI,cAAA,EAAE,EAAE,CANR;AAOI,cAAA,OAAO,EAAE,CAPb;AAQI,cAAA,SAAS,EAAE1B,OAAO,CAAC2B,OARvB;AAAA,qCAUI,QAAC,SAAD;AACI,gBAAA,OAAO,EAAExB,OADb;AAGI,gBAAA,WAAW,EAAEsB,IAHjB;AAII,gBAAA,YAAY,EAAE7B,YAJlB;AAKI,gBAAA,OAAO,EAAEG,IAAI,CAAC6B,OALlB;AAMI,gBAAA,cAAc,EAAE9B;AANpB,iBAES2B,IAAI,CAACI,EAFd;AAAA;AAAA;AAAA;AAAA;AAVJ,eAGSH,KAHT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAqBH,WAtBA;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA8BH,KA/BD,MA+BO;AACH,0BACI,QAAC,UAAD;AACI,QAAA,SAAS,EAAC,IADd;AAEI,QAAA,KAAK,EAAC,WAFV;AAGI,QAAA,OAAO,EAAC,IAHZ;AAII,QAAA,KAAK,EAAC,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACJ,GA5CD,MA4CO;AACH,wBACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;;GA5FuB/B,K;UAMJH,S;;;KANIG,K","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Grid, Typography } from '@material-ui/core'\nimport MatchCard from '../../Components/MatchCard'\nimport Loader from '../../Components/Loader'\nimport useStyles from './style'\nimport { getAllDocuments, getSingleDocument } from '../../services/firebase'\n\nexport default function Index({\n    loggedinUser,\n    externalData,\n    collectionName='plants',\n    ...rest\n}){\n    const classes = useStyles()\n    const [filteredData, setFilteredData] = useState([])\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [snackBar, setSnackBar] = React.useState({\n        value: false,\n        message: '',\n        type: '',\n    })\n    \n    useEffect(() => {\n        var mounted = true\n        async function getPlants() {\n            setLoading(true)\n            if (Object.keys(loggedinUser).length !== 0) {\n                const isAdminResponse = await getSingleDocument('users', loggedinUser.userId)\n                if (isAdminResponse.isAdmin) {\n                    setIsAdmin(true)\n                }\n            }\n                const response = await getAllDocuments(collectionName)\n                console.log(response)\n                if (mounted) {\n                    setFilteredData(response)\n                }\n                setLoading(false)\n        }\n        \n            getPlants()\n        \n        return () => { mounted = false }\n    },[])\n\n\n \n    if (!loading) {\n        if (filteredData.length !== 0) {\n            return (\n                <div className={classes.root}>\n                    <Button fullWidth variant=\"contained\" color=\"secondary\">Add {collectionName.slice(0,-1)}</Button>\n                    <Grid container spacing={2}>\n                        {filteredData.map((item,index) => {\n                            return (\n                                <Grid\n                                    container\n                                    item\n                                    key={index}\n                                    xs={12}\n                                    sm={6}\n                                    lg={3}\n                                    spacing={5}\n                                    className={classes.wrapper}\n                                >\n                                    <MatchCard\n                                        isAdmin={isAdmin}\n                                        key={item.id}\n                                        itemDetails={item}\n                                        loggedinUser={loggedinUser}\n                                        history={rest.history}\n                                        collectionName={collectionName}\n                                    />\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>\n            )\n        } else {\n            return (\n                <Typography\n                    component='h1'\n                    color='secondary'\n                    variant='h4'\n                    align='center'\n                >\n                    No Items To show\n                </Typography>\n            )\n        }\n    } else {\n        return (\n            <Typography align='center'>\n                <Loader />\n            </Typography>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}