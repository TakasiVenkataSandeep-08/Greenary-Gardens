{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport CommonForm from '../../Components/CommonForm';\nimport { emailFormValidator, passwordFormValidator } from '../../FormValidators/FormValidator';\nimport { loginUser } from '../../services/firebase';\nexport default function Login({\n  setSnackBar,\n  setLoggedinUser,\n  setLoginAuthenticated,\n  location\n}) {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    mode: 'onChange'\n  });\n  const loginFormDetails = [{\n    name: 'email',\n    type: 'email',\n    label: 'Email Address',\n    error: errors.email,\n    validator: register(emailFormValidator()),\n    helperText: errors.email ? errors.email.message : null\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    validator: register(passwordFormValidator()),\n    error: errors.password,\n    helperText: errors.password ? errors.password.message : null\n  }];\n\n  const handleLogin = async data => {\n    setLoading(true);\n    const email = data.email;\n    const password = data.password;\n    await loginUser(email, password);\n    setLoading(false);\n  }; // else {\n  //   setSnackBar({ value: true, message: userData.message, type: 'red' })\n  //   setLoading(false)\n  // }\n\n\n  if (location.verified) {\n    setSnackBar(location.verified);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CommonForm, {\n    submitFunction: handleSubmit(handleLogin),\n    isLoading: loading,\n    submitButtonName: 'login',\n    formHeading: 'Login',\n    formDetails: loginFormDetails\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"1GHRszNaSzFAcPAowsdFhF3NcZ0=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Containers/Login/index.js"],"names":["React","useForm","CommonForm","emailFormValidator","passwordFormValidator","loginUser","Login","setSnackBar","setLoggedinUser","setLoginAuthenticated","location","loading","setLoading","useState","register","handleSubmit","errors","mode","loginFormDetails","name","type","label","error","email","validator","helperText","message","password","handleLogin","data","verified"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,oCAHP;AAIA,SAAQC,SAAR,QAAwB,yBAAxB;AAEA,eAAe,SAASC,KAAT,CAAe;AAC5BC,EAAAA,WAD4B;AAE5BC,EAAAA,eAF4B;AAG5BC,EAAAA,qBAH4B;AAI5BC,EAAAA;AAJ4B,CAAf,EAKZ;AAAA;;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCf,OAAO,CAAC;AACjDgB,IAAAA,IAAI,EAAE;AAD2C,GAAD,CAAlD;AAGA,QAAMC,gBAAgB,GAAG,CACvB;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,KAAK,EAAE,eAHT;AAIEC,IAAAA,KAAK,EAAEN,MAAM,CAACO,KAJhB;AAKEC,IAAAA,SAAS,EAAEV,QAAQ,CAACX,kBAAkB,EAAnB,CALrB;AAMEsB,IAAAA,UAAU,EAAET,MAAM,CAACO,KAAP,GAAeP,MAAM,CAACO,KAAP,CAAaG,OAA5B,GAAsC;AANpD,GADuB,EASvB;AACEP,IAAAA,IAAI,EAAE,UADR;AAEEE,IAAAA,KAAK,EAAE,UAFT;AAGED,IAAAA,IAAI,EAAE,UAHR;AAIEI,IAAAA,SAAS,EAAEV,QAAQ,CAACV,qBAAqB,EAAtB,CAJrB;AAKEkB,IAAAA,KAAK,EAAEN,MAAM,CAACW,QALhB;AAMEF,IAAAA,UAAU,EAAET,MAAM,CAACW,QAAP,GAAkBX,MAAM,CAACW,QAAP,CAAgBD,OAAlC,GAA4C;AAN1D,GATuB,CAAzB;;AAkBA,QAAME,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCjB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMW,KAAK,GAAGM,IAAI,CAACN,KAAnB;AACA,UAAMI,QAAQ,GAAGE,IAAI,CAACF,QAAtB;AAEA,UAAMtB,SAAS,CAACkB,KAAD,EAAOI,QAAP,CAAf;AACEf,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPH,CAvBC,CA+BC;AACA;AACA;AACA;;;AAEF,MAAIF,QAAQ,CAACoB,QAAb,EAAuB;AACrBvB,IAAAA,WAAW,CAACG,QAAQ,CAACoB,QAAV,CAAX;AACD;;AACD,sBACE,QAAC,UAAD;AACE,IAAA,cAAc,EAAEf,YAAY,CAACa,WAAD,CAD9B;AAEE,IAAA,SAAS,EAAEjB,OAFb;AAGE,IAAA,gBAAgB,EAAE,OAHpB;AAIE,IAAA,WAAW,EAAE,OAJf;AAKE,IAAA,WAAW,EAAEO;AALf;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArDuBZ,K;UAOqBL,O;;;KAPrBK,K","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport CommonForm from '../../Components/CommonForm'\nimport {\n  emailFormValidator,\n  passwordFormValidator,\n} from '../../FormValidators/FormValidator'\nimport {loginUser} from '../../services/firebase'\n\nexport default function Login({\n  setSnackBar,\n  setLoggedinUser,\n  setLoginAuthenticated,\n  location,\n}) {\n  const [loading, setLoading] = React.useState(false)\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n  })\n  const loginFormDetails = [\n    {\n      name: 'email',\n      type: 'email',\n      label: 'Email Address',\n      error: errors.email,\n      validator: register(emailFormValidator()),\n      helperText: errors.email ? errors.email.message : null,\n    },\n    {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      validator: register(passwordFormValidator()),\n      error: errors.password,\n      helperText: errors.password ? errors.password.message : null,\n    },\n  ]\n  const handleLogin = async (data) => {\n    setLoading(true)\n    const email = data.email\n    const password = data.password\n    \n    await loginUser(email,password)\n      setLoading(false)\n    }\n    // else {\n    //   setSnackBar({ value: true, message: userData.message, type: 'red' })\n    //   setLoading(false)\n    // }\n\n  if (location.verified) {\n    setSnackBar(location.verified)\n  }\n  return (\n    <CommonForm\n      submitFunction={handleSubmit(handleLogin)}\n      isLoading={loading}\n      submitButtonName={'login'}\n      formHeading={'Login'}\n      formDetails={loginFormDetails}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}