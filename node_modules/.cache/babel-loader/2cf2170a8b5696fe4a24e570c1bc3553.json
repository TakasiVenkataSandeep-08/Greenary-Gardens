{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\nconst config = {\n  apiKey: \"AIzaSyBmIcRoW1W55HUxkDq2I8A76VbfSOvifew\",\n  authDomain: \"greenary-gardens.firebaseapp.com\",\n  projectId: \"greenary-gardens\",\n  storageBucket: \"greenary-gardens.appspot.com\",\n  messagingSenderId: \"909264771422\",\n  appId: \"1:909264771422:web:445f6d6267c15d4c9e17cf\",\n  measurementId: \"G-B1J3H3H0GL\"\n};\napp.initializeApp(config);\nconst firebaseDb = app.firestore();\nconst storageRef = app.storage().ref();\nexport default app;\nexport async function addUser(email, password) {\n  try {\n    let userData = await app.auth().createUserWithEmailAndPassword(email, password);\n    await firebaseDb.collection('users').doc(userData.user.uid).set({\n      email,\n      password,\n      createdAt: app.firestore.FieldValue.serverTimestamp()\n    });\n  } catch (error) {\n    alert(error.message);\n  }\n}\nexport async function logoutUser() {\n  try {\n    await app.auth().signOut();\n  } catch (err) {\n    alert(err.message);\n  }\n}\nexport async function loginUser(email, password) {\n  try {\n    await app.auth().signInWithEmailAndPassword(email, password);\n  } catch (error) {\n    alert(error.message);\n  }\n}\nexport async function addDocument(collectionName, data) {\n  await firebaseDb.collection(collectionName).add({ ...data,\n    createdAt: app.firestore.FieldValue.serverTimestamp()\n  });\n}\nexport async function getAllDocuments(collectionName) {\n  let response = await firebaseDb.collection(collectionName).orderBy(\"createdAt\", \"desc\").get();\n  return response.data();\n}\nexport async function getSingleDocument(collectionName, id) {\n  let doc = await firebaseDb.collection(collectionName).doc(id).get();\n  return doc.data();\n}\nexport async function updateDocument(collectionName, id, data) {\n  await firebaseDb.collection(collectionName).doc(id).set(data, {\n    merge: true\n  });\n}\nexport async function deleteDocument(collectionName, id, imageUrl) {\n  const fileRef = app.storage().refFromURL(imageUrl);\n\n  try {\n    await firebaseDb.collection(collectionName).doc(id).delete();\n    await fileRef.delete();\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function uploadImage(collectionName, date, imageData) {\n  const fileRef = storageRef.child(`/${collectionName}/images/${date}/${imageData.name}`);\n  await fileRef.put(imageData);\n  let url = await fileRef.getDownloadURL();\n  return url;\n}","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/services/firebase.js"],"names":["app","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firebaseDb","firestore","storageRef","storage","ref","addUser","email","password","userData","auth","createUserWithEmailAndPassword","collection","doc","user","uid","set","createdAt","FieldValue","serverTimestamp","error","alert","message","logoutUser","signOut","err","loginUser","signInWithEmailAndPassword","addDocument","collectionName","data","add","getAllDocuments","response","orderBy","get","getSingleDocument","id","updateDocument","merge","deleteDocument","imageUrl","fileRef","refFromURL","delete","console","log","uploadImage","date","imageData","child","name","put","url","getDownloadURL"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,MAAMC,MAAM,GAAG;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEbC,EAAAA,UAAU,EAAE,kCAFC;AAGbC,EAAAA,SAAS,EAAE,kBAHE;AAIbC,EAAAA,aAAa,EAAE,8BAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE,2CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AASAR,GAAG,CAACS,aAAJ,CAAkBR,MAAlB;AAEA,MAAMS,UAAU,GAAGV,GAAG,CAACW,SAAJ,EAAnB;AACA,MAAMC,UAAU,GAAGZ,GAAG,CAACa,OAAJ,GAAcC,GAAd,EAAnB;AAEA,eAAed,GAAf;AAEA,OAAO,eAAee,OAAf,CAAuBC,KAAvB,EAA6BC,QAA7B,EAAsC;AACzC,MAAG;AACH,QAAIC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,GAAWC,8BAAX,CAA0CJ,KAA1C,EAAgDC,QAAhD,CAArB;AACA,UAAMP,UAAU,CAACW,UAAX,CAAsB,OAAtB,EAA+BC,GAA/B,CAAmCJ,QAAQ,CAACK,IAAT,CAAcC,GAAjD,EAAsDC,GAAtD,CAA0D;AAC5DT,MAAAA,KAD4D;AAE5DC,MAAAA,QAF4D;AAG5DS,MAAAA,SAAS,EAAE1B,GAAG,CAACW,SAAJ,CAAcgB,UAAd,CAAyBC,eAAzB;AAHiD,KAA1D,CAAN;AAKC,GAPD,CAQA,OAAMC,KAAN,EAAY;AACRC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;AACJ;AACD,OAAO,eAAeC,UAAf,GAA2B;AAC9B,MAAG;AACC,UAAMhC,GAAG,CAACmB,IAAJ,GAAWc,OAAX,EAAN;AACH,GAFD,CAGA,OAAMC,GAAN,EAAU;AACNJ,IAAAA,KAAK,CAACI,GAAG,CAACH,OAAL,CAAL;AACH;AACJ;AACD,OAAO,eAAeI,SAAf,CAAyBnB,KAAzB,EAA+BC,QAA/B,EAAwC;AAC3C,MAAG;AACC,UAAMjB,GAAG,CAACmB,IAAJ,GAAWiB,0BAAX,CAAsCpB,KAAtC,EAA4CC,QAA5C,CAAN;AACH,GAFD,CAGA,OAAMY,KAAN,EAAY;AACRC,IAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;AACJ;AAGD,OAAO,eAAeM,WAAf,CAA2BC,cAA3B,EAA0CC,IAA1C,EAA+C;AAClD,QAAM7B,UAAU,CAACW,UAAX,CAAsBiB,cAAtB,EACLE,GADK,CAEF,EACG,GAAGD,IADN;AAEGb,IAAAA,SAAS,EAAE1B,GAAG,CAACW,SAAJ,CAAcgB,UAAd,CAAyBC,eAAzB;AAFd,GAFE,CAAN;AAMH;AACD,OAAO,eAAea,eAAf,CAA+BH,cAA/B,EAA8C;AACjD,MAAII,QAAQ,GAAG,MAAMhC,UAAU,CAACW,UAAX,CAAsBiB,cAAtB,EAAsCK,OAAtC,CAA8C,WAA9C,EAA0D,MAA1D,EAAkEC,GAAlE,EAArB;AACA,SAAOF,QAAQ,CAACH,IAAT,EAAP;AACH;AACD,OAAO,eAAeM,iBAAf,CAAiCP,cAAjC,EAAgDQ,EAAhD,EAAmD;AACtD,MAAIxB,GAAG,GAAG,MAAMZ,UAAU,CAACW,UAAX,CAAsBiB,cAAtB,EAAsChB,GAAtC,CAA0CwB,EAA1C,EAA8CF,GAA9C,EAAhB;AACA,SAAOtB,GAAG,CAACiB,IAAJ,EAAP;AACH;AACD,OAAO,eAAeQ,cAAf,CAA8BT,cAA9B,EAA6CQ,EAA7C,EAAgDP,IAAhD,EAAqD;AACxD,QAAM7B,UAAU,CAACW,UAAX,CAAsBiB,cAAtB,EAAsChB,GAAtC,CAA0CwB,EAA1C,EAA8CrB,GAA9C,CAAkDc,IAAlD,EAAuD;AAACS,IAAAA,KAAK,EAAC;AAAP,GAAvD,CAAN;AACH;AACD,OAAO,eAAeC,cAAf,CAA8BX,cAA9B,EAA6CQ,EAA7C,EAAgDI,QAAhD,EAAyD;AAExD,QAAMC,OAAO,GAAGnD,GAAG,CAACa,OAAJ,GAAcuC,UAAd,CAAyBF,QAAzB,CAAhB;;AACC,MAAG;AACJ,UAAMxC,UAAU,CAACW,UAAX,CAAsBiB,cAAtB,EAAsChB,GAAtC,CAA0CwB,EAA1C,EAA8CO,MAA9C,EAAN;AAEA,UAAMF,OAAO,CAACE,MAAR,EAAN;AACK,GAJJ,CAKG,OAAMnB,GAAN,EAAU;AACNoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AACH;AAEZ;AAED,OAAO,eAAesB,WAAf,CAA2BlB,cAA3B,EAA0CmB,IAA1C,EAA+CC,SAA/C,EAAyD;AAC5D,QAAMP,OAAO,GAAGvC,UAAU,CAAC+C,KAAX,CAAkB,IAAGrB,cAAe,WAAUmB,IAAK,IAAGC,SAAS,CAACE,IAAK,EAArE,CAAhB;AACA,QAAMT,OAAO,CAACU,GAAR,CAAYH,SAAZ,CAAN;AACA,MAAII,GAAG,GAAG,MAAMX,OAAO,CAACY,cAAR,EAAhB;AACA,SAAOD,GAAP;AACH","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/storage'\nconst config = {\n   apiKey: \"AIzaSyBmIcRoW1W55HUxkDq2I8A76VbfSOvifew\",\n  authDomain: \"greenary-gardens.firebaseapp.com\",\n  projectId: \"greenary-gardens\",\n  storageBucket: \"greenary-gardens.appspot.com\",\n  messagingSenderId: \"909264771422\",\n  appId: \"1:909264771422:web:445f6d6267c15d4c9e17cf\",\n  measurementId: \"G-B1J3H3H0GL\"\n};\napp.initializeApp(config);\n\nconst firebaseDb = app.firestore()\nconst storageRef = app.storage().ref()\n\nexport default app;\n\nexport async function addUser(email,password){\n    try{\n    let userData = await app.auth().createUserWithEmailAndPassword(email,password)\n    await firebaseDb.collection('users').doc(userData.user.uid).set({\n        email,\n        password,\n        createdAt: app.firestore.FieldValue.serverTimestamp()\n            })\n    }\n    catch(error){\n        alert(error.message)\n    }\n}\nexport async function logoutUser(){\n    try{\n        await app.auth().signOut()\n    }\n    catch(err){\n        alert(err.message)\n    }\n}\nexport async function loginUser(email,password){\n    try{\n        await app.auth().signInWithEmailAndPassword(email,password)\n    }\n    catch(error){\n        alert(error.message)\n    }\n}\n\n\nexport async function addDocument(collectionName,data){ \n    await firebaseDb.collection(collectionName)\n    .add(\n        {\n           ...data,\n           createdAt: app.firestore.FieldValue.serverTimestamp()\n        })\n}\nexport async function getAllDocuments(collectionName){\n    let response = await firebaseDb.collection(collectionName).orderBy(\"createdAt\",\"desc\").get()\n    return response.data()\n}\nexport async function getSingleDocument(collectionName,id){\n    let doc = await firebaseDb.collection(collectionName).doc(id).get()\n    return doc.data()\n}\nexport async function updateDocument(collectionName,id,data){\n    await firebaseDb.collection(collectionName).doc(id).set(data,{merge:true})\n}\nexport async function deleteDocument(collectionName,id,imageUrl){\n \n        const fileRef = app.storage().refFromURL(imageUrl)\n         try{       \n        await firebaseDb.collection(collectionName).doc(id).delete()\n\n        await fileRef.delete()\n            }\n            catch(err){\n                console.log(err)\n            }\n\n}\n\nexport async function uploadImage(collectionName,date,imageData){\n    const fileRef = storageRef.child(`/${collectionName}/images/${date}/${imageData.name}`);\n    await fileRef.put(imageData)\n    let url = await fileRef.getDownloadURL()\n    return url\n}"]},"metadata":{},"sourceType":"module"}