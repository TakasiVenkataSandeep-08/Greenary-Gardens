{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/nursery/src/Components/Sidebar/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useStyles from './style';\nimport SuccessButton from '../CustomButtons/success';\nimport { Link } from 'react-router-dom';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { purple, deepOrange, lightBlue, green } from '@material-ui/core/colors';\nexport default function SideBar({\n  authFinder,\n  logout\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: [{\n        name: 'Pots',\n        to: '/pots',\n        icon: /*#__PURE__*/_jsxDEV(LiveTvIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 46\n        }, this)\n      }, {\n        name: ' My Subscriptions',\n        to: '/subscriptions',\n        icon: /*#__PURE__*/_jsxDEV(SubscriptionsIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 143\n        }, this)\n      }, {\n        name: 'Tournaments',\n        to: '/',\n        icon: /*#__PURE__*/_jsxDEV(ListAltIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 229\n        }, this)\n      }, {\n        name: 'Cric Feed',\n        to: '/',\n        icon: /*#__PURE__*/_jsxDEV(InboxIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 305\n        }, this)\n      }].map((text, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: text.to,\n        style: {\n          textDecoration: \"none\",\n          color: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: classes.linkText,\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: text.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, text.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [{\n        name: 'Signup',\n        color: green['A400'],\n        hoverColor: green['A200'],\n        to: '/signup',\n        hide: authFinder\n      }, {\n        name: 'Login',\n        color: lightBlue['A700'],\n        hoverColor: lightBlue['A400'],\n        to: '/login',\n        hide: authFinder\n      }, {\n        name: 'Logout',\n        color: deepOrange[500],\n        hoverColor: deepOrange[700],\n        hide: !authFinder\n      }].map((text, index) => text.name !== 'Logout' ? /*#__PURE__*/_jsxDEV(Link, {\n        to: text.to,\n        style: text.hide ? {\n          display: \"none\"\n        } : {\n          display: \"block\",\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: classes.buttonList,\n          children: /*#__PURE__*/_jsxDEV(SuccessButton, {\n            color: text.color,\n            hoverColor: text.hoverColor,\n            text: text.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, text.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.buttonList,\n        style: text.hide ? {\n          display: \"none\"\n        } : {\n          display: \"block\",\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SuccessButton, {\n          color: text.color,\n          hoverColor: text.hoverColor,\n          text: text.name,\n          onClick: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, text.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      only: ['lg', 'xl', 'md'],\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer('right', true),\n        className: classes.menuButton,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n      anchor: \"right\",\n      open: state.right,\n      onClose: toggleDrawer('right', false),\n      onOpen: toggleDrawer('right', true),\n      children: list('right')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SideBar, \"e0ncmEO9SihfCksPVn+4XpSPkjw=\", false, function () {\n  return [useStyles];\n});\n\n_c = SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/nursery/src/Components/Sidebar/index.js"],"names":["React","clsx","SwipeableDrawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","Hidden","IconButton","MenuIcon","useStyles","SuccessButton","Link","SubscriptionsIcon","LiveTvIcon","ListAltIcon","purple","deepOrange","lightBlue","green","SideBar","authFinder","logout","classes","state","setState","useState","right","toggleDrawer","anchor","open","event","type","key","list","fullList","name","to","icon","map","text","index","textDecoration","color","linkText","hoverColor","hide","display","buttonList","menuButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport { Hidden, IconButton } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport useStyles from './style'\nimport SuccessButton from '../CustomButtons/success'\nimport { Link } from 'react-router-dom'\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { purple,deepOrange,lightBlue,green} from '@material-ui/core/colors';\n\n\nexport default function SideBar({\n  authFinder,\n  logout\n}) {\n  const classes = useStyles()\n  const [state, setState] = React.useState({\n    right: false\n  })\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n\n    setState({ ...state, [anchor]: open })\n  }\n  const list = (anchor) => <div\n    className={clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    })}\n    role='presentation'\n    onClick={toggleDrawer(anchor, false)}\n    onKeyDown={toggleDrawer(anchor, false)}\n  >\n    <List>\n        {[{ name: 'Pots', to: '/pots', icon: <LiveTvIcon className={ classes.icon}/>}, { name: ' My Subscriptions', to: '/subscriptions',icon:<SubscriptionsIcon className={ classes.icon}/> }, { name: 'Tournaments', to: '/',icon:<ListAltIcon className={ classes.icon}/> }, { name: 'Cric Feed',to:'/',icon:<InboxIcon className={ classes.icon} />}].map((text, index) => (\n              <Link key={index} to={text.to} style={{textDecoration:\"none\",color:\"black\"}}>\n            <ListItem className={classes.linkText} button key={text.name}>\n                    <ListItemIcon>{ text.icon}</ListItemIcon>\n                <ListItemText primary={text.name} />\n        </ListItem>\n        </Link>\n      ))}\n    </List>\n    <Divider />\n    <List>\n      {[{name:'Signup',color:green['A400'],hoverColor:green['A200'],to:'/signup',hide:authFinder},{name:'Login',color:lightBlue['A700'],hoverColor:lightBlue['A400'],to:'/login',hide:authFinder},{ name: 'Logout' ,color:deepOrange[500],hoverColor:deepOrange[700],hide:!authFinder}].map((text,index) => (\n        text.name !== 'Logout' ?\n                  <Link key={index} to={text.to} style={text.hide? {display:\"none\"}:{display:\"block\",textDecoration:\"none\",color:\"white\"}}>\n            <ListItem key={text.name} className={classes.buttonList}>\n                <SuccessButton color={text.color} hoverColor={text.hoverColor} text={text.name}/>\n            </ListItem>\n            </Link>\n          :\n                  <ListItem key={text.name} className={classes.buttonList} style={text.hide? {display:\"none\"}:{display:\"block\",color:\"white\"}}>\n                    <SuccessButton color={text.color} hoverColor={text.hoverColor} text={text.name} onClick={logout} />\n        </ListItem>\n      ))}\n    </List>\n  </div>\n\n  return (\n      <>\n        <Hidden only={['lg', 'xl', 'md']}><Button onClick={toggleDrawer('right', true)} className={classes.menuButton}>\n            <IconButton\n          edge='start'\n\n          color='inherit'\n          aria-label='menu'\n        >\n                <MenuIcon />\n        </IconButton>\n      </Button>\n      </Hidden>\n        <SwipeableDrawer\n        anchor='right'\n        open={state.right}\n        onClose={toggleDrawer('right', false)}\n        onOpen={toggleDrawer('right', true)}\n      >\n        {list('right')}\n      </SwipeableDrawer>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}